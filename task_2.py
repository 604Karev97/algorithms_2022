"""
Задание 2.

Реализуйте два алгоритма.

Оба должны обеспечивать поиск минимального значения для списка.

Сложность первого алгоритма должна быть O(n^2) - квадратичная.

Сложность второго алгоритма должна быть O(n) - линейная.


Примечание: ПРОШУ ВАС ВНИМАТЕЛЬНО ЧИТАТЬ ЗАДАНИЕ!
-- нельзя использовать встроенные функции min() и sort()
"""

"""
Алгоритм 1. Сложность: О(N^2)
"""


############################################
def get_min1(lst_obj):
    min_el = lst_obj[0]  # O(1)
    for el in lst_obj:  # O(N)
        for i in range(lst_obj.index(el) + 1, len(lst_obj) - 1, 1):  # O(N)
            if min_el > lst_obj[i]:  # O(len(lst[i])
                min_el = lst_obj[i]  # O(1)
    return min_el


lst_1 = [5, 252, -5, 0, 95, -24, 100, 96, -10]
lst_2 = [10, 300, 1, 1, -95, 24, 0, 2, -10]

print(get_min1(lst_1))
print(get_min1(lst_2))

#############################################

"""
Алгоритм 2. Сложность: О(N)
"""


############################################
def get_min2(lst_obj):
    min_el = lst_obj[0]  # O(1)
    for el in lst_obj:  # O(N)
        if el < min_el:  # O(1)
            min_el = el  # O(1)
    return min_el  # O(1)


lst_1 = [5, 252, -5, 0, 95, -24, 100, 96, -10]
lst_2 = [10, 300, 1, 1, -95, 24, 0, 2, -10]

print(get_min2(lst_1))
print(get_min2(lst_2))

#############################################
