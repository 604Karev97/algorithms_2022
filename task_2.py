"""
Задание 2.	Подсчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной.
При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены, рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //. Операции взятия по индексу применять нельзя.

Решите через рекурсию. Решение через цикл не принимается.

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


def get_even_odd(num, evens=0, odds=0):
    # базовый случай
    if len(str(num)) == 0:
        return f"Четных чисел: {evens}\nНечетных чисел: {odds}"
    else:
        if int(str(num)[0]) % 2 == 0:
            evens += 1
        else:
            odds += 1
        # шаг рекурсии
        return get_even_odd(str(num)[1:], evens, odds)


print(get_even_odd(235624356))
